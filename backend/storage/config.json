{
  "private_key": "",
  "public_key": "0x56A52b69179fB4BF0d0Bc9aefC340E63c36d3895",
  "main_networks": [
    {
      "name": "fuji",
      "api_url": "https://red-weathered-firefly.avalanche-testnet.quiknode.pro/ext/bc/C/rpc",
      "bridge_address": "0x5f024972Fa6F59255AD8BDC289262930ea6A7261",
      "oracle": "0xAD6D424A6b75F9fc26665633dAe7781bc1bA5b39",
      "abi": [
        "function bridgeToSubnet(uint256 amount, address asset) public returns (uint256)",
        "function approve(address spender, uint256 amount) public returns (bool)",
        "function bridgeToMainnet(address asset, address user, uint256 amount, uint256 _swapID) public returns (address)",
        "function updateMultiple(address[] memory pairs, address[] memory tokenIns, address[] memory tokenOuts)",
        "function price(address) view returns (uint256)",
        "function marketCap(address) view returns (uint256)",
        "function factory() external pure returns (address)",
        "function getPair(address tokenA, address tokenB) external view returns (address pair)",
        "event BridgeToSubnet(address indexed user, address indexed asset, uint256 indexed amount, uint256 _bridgeRequestID, string name_, string symbol_)",
        "event BridgeToMainnet(address indexed user, address indexed asset, uint256 indexed amount, uint256 _bridgeRequestID, string name_, string symbol_)"
      ]
    }
  ],
  "subnet": {
    "name": "fuji",
    "api_url": "https://red-weathered-firefly.avalanche-testnet.quiknode.pro/ext/bc/C/rpc",
    "bridge_manager_address": "0x862355f4d23D21E77aEaE24529819CBdA0A45858",
    "oracle": "0x665a3a94a52C27099B43995001F1e5aBde058D2e",
    "abi": [
      "event BridgeToSubnet(address indexed user, address indexed asset, uint256 indexed amount, uint256 _bridgeRequestID, string name_, string symbol_)",
      "event BridgeToMainnet(address indexed user, address indexed asset, uint256 indexed amount, uint256 _bridgeRequestID, string name_, string symbol_)",
      "function bridgeToMainnet(address asset, uint256 amount) public returns (uint256)",
      "function approve(address spender, uint256 amount) public returns (bool)",
      "function bridgeToSubnet(address asset, address user, uint256 amount, uint256 _swapID, string memory name_, string memory symbol_) public returns (address)",
      "function updateMultiple(address[] memory tokens, uint256[] memory prices) external",
      "function price(address) view returns (uint256)",
      "function updateMultipleMarketCap(address[] memory tokens, uint256[] memory mcaps) external",
      "function updateMarketCap(address mainnetToken, uint256 _mcap) public returns (uint256)",
      "function subnetAddresses(address) view returns (address)",
      "function burnAsset(address _token, uint256 _amount) public",
      "function mintAsset(address _token, uint256 _amount) public"
    ]
  }
}
